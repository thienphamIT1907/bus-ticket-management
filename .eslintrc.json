{
  "root": true,
  "env": { "browser": true, "es2020": true },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react-hooks/recommended",
    // "plugin:perfectionist/recommended-natural",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:jsx-a11y/recommended",
    "prettier"
  ],
  "ignorePatterns": [
    "dist",
    "*.js",
    "node_modules",
    "tests/**",
    "alias.ts",
    "**/*.test.ts",
    "**/*.test.tsx",
    "*.config.ts",
    "*.d.ts",
    "codegen.ts",
    "*.cjs",
    "*.schemas.tsx"
  ],
  "overrides": [{ "extends": "plugin:jest/all", "files": ["src"] }],

  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": [
    // "perfectionist",
    "prettier",
    "react-refresh",
    "jest",
    "unused-imports"
  ],
  "rules": {
    "prettier/prettier": ["error"],

    /* React Rules*/
    "react/react-in-jsx-scope": "off",
    "react/destructuring-assignment": "error",
    "react/function-component-definition": [
      "warn",
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "react/hook-use-state": "error",
    "react/jsx-fragments": ["error", "syntax"],
    "react/jsx-handler-names": ["off", { "checkInlineFunction": true }],
    "react/jsx-no-leaked-render": "error",
    "react/button-has-type": "error",
    "react/no-array-index-key": "off",
    "react/no-unstable-nested-components": "error",
    "react/no-unused-prop-types": "error",
    "react/self-closing-comp": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react-hooks/rules-of-hooks": "error",
    "react-refresh/only-export-components": [
      "warn",
      { "allowConstantExport": true }
    ],
    "react/jsx-no-script-url": [
      "error",
      [
        {
          "name": "Link",
          "props": ["to"]
        }
      ]
    ],

    /* Typescript Rules*/
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/consistent-type-imports": [
      "warn",
      { "prefer": "type-imports" }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/method-signature-style": "error",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/no-misused-promises": "off",
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unsafe-argument": "warn",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-return": "warn",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "args": "after-used",
        "argsIgnorePattern": "^_",
        "vars": "all",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/no-useless-empty-export": "error",
    "@typescript-eslint/padding-line-between-statements": [
      "warn",
      {
        "blankLine": "always",
        "next": ["interface", "type", "block-like"],
        "prev": "*"
      },
      {
        "blankLine": "always",
        "next": ["*"],
        "prev": ["interface", "type", "export", "block-like"]
      }
    ],
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/restrict-template-expressions": "warn",

    /* Coding Convention Rules */
    "unused-imports/no-unused-imports": "error",
    "array-callback-return": "error",
    "arrow-body-style": ["error", "as-needed"],
    "default-case-last": "error",
    "default-param-last": "error",
    "dot-notation": "error",
    "generator-star-spacing": "error",
    "import/newline-after-import": "error",
    "import/no-mutable-exports": "error",
    "max-lines": ["warn", 500],
    "max-params": ["warn", 5],
    "multiline-comment-style": ["error", "separate-lines"],
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-else-return": ["error", { "allowElseIf": false }],
    "no-lonely-if": ["error"],
    "no-loop-func": "error",
    "no-nested-ternary": ["error"],
    "no-new-func": "error",
    "no-new-object": "error",
    "no-param-reassign": "error",
    "no-restricted-imports": [
      "error",
      {
        "patterns": [
          {
            "group": ["lodash"],
            "message": "Please use import from 'lodash-es' instead."
          },
          {
            "group": ["moment"],
            "message": "Please use import from 'dayjs' instead."
          },
          {
            "group": ["./../../*"],
            "message": "Please use alias import instead of deep parent import"
          },
          {
            "group": ["../../../*"],
            "message": "Please use alias import instead of deep parent import"
          }
        ]
      }
    ],
    "no-unneeded-ternary": ["error"],
    "no-unused-expressions": [
      "error",
      { "allowShortCircuit": true, "allowTernary": true }
    ],
    "object-shorthand": "error",
    "prefer-arrow-callback": "error",
    "prefer-destructuring": ["error"],
    "prefer-object-spread": "error",
    "prefer-template": "error",
    "comma-dangle": [1, "always-multiline"],
    "no-shadow": "off",
    "camelcase": 1,
    "no-empty-function": 1,
    "no-use-before-define": 0,
    "no-unsafe-optional-chaining": 0,
    "no-underscore-dangle": 0,
    "no-plusplus": [
      2,
      {
        "allowForLoopAfterthoughts": true
      }
    ],
    "func-names": ["error", "never"],

    /* Sort Rules */
    // "perfectionist/sort-objects": [
    //   "off",
    //   {
    //     "type": "natural",
    //     "order": "asc"
    //   }
    // ],
    // "perfectionist/sort-imports": [
    //   "warn",
    //   {
    //     "newlines-between": "ignore",
    //     "type": "natural",
    //     "order": "asc",
    //     "groups": [
    //       "type",
    //       "react",
    //       "nanostores",
    //       ["builtin", "external"],
    //       "internal-type",
    //       "internal",
    //       ["parent-type", "sibling-type", "index-type"],
    //       ["parent", "sibling", "index"],
    //       "side-effect",
    //       "style",
    //       "object",
    //       "unknown"
    //     ],
    //     "internal-pattern": [
    //       "@/components/**",
    //       "@/stores/**",
    //       "@/pages/**",
    //       "@/lib/**"
    //     ]
    //   }
    // ],
    // "perfectionist/sort-jsx-props": [
    //   "error",
    //   {
    //     "type": "natural",
    //     "order": "asc",
    //     "groups": ["multiline", "unknown", "shorthand"]
    //   }
    // ],
    // "perfectionist/sort-named-imports": [
    //   "error",
    //   {
    //     "type": "natural",
    //     "order": "asc"
    //   }
    // ],
    "import/no-restricted-paths": [
      "error",
      {
        "zones": [
          {
            "target": "./src/features/global-settings",
            "from": "./src/features",
            "except": ["./global-settings"]
          },
          {
            "target": "./src/features",
            "from": "./src/app"
          },
          {
            "target": ["./src/shared", "./src/lib"],
            "from": ["./src/features", "./src/app"]
          }
        ]
      }
    ]
  },

  "settings": {
    "import/ignore": ["node_modules"],
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".ts", ".tsx"]
      },
      "typescript": {
        "project": "./tsconfig.json"
      }
    },
    "react": {
      "version": "detect"
    }
  }
}
